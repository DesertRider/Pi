# Ajuster hostname, wifi, timezone, ... 
sudo raspi-config
sudo reboot

sudo apt-get update -y
sudo apt-get upgrade -y

# --- Personnalisation de l'installation par défaut
cat >> ~/.bash_aliases <<END
alias dir='ls -lah'
alias ..='cd ..'
export PROMPT_COMMAND='history -a'
END

# formattage du datetime dans le history
cat >> /tmp/history.sh <<FIN
HISTTIMEFORMAT=\${HISTTIMEFORMAT:-"%F %H:%M:%S "}
FIN
sudo mv /tmp/history.sh /etc/profile.d

source ~/.bashrc

sudo sed -i '/\\e\[5~/s/^# //g' /etc/inputrc
sudo sed -i '/\\e\[6~/s/^# //g' /etc/inputrc
bind -f /etc/inputrc

sudo apt-get install -y vim bc tree

# --- Setup de la clé ssh
ssh-keygen -t rsa -N "" -f ~/.ssh/id_rsa

# --- Ajout des clés publiques permises
echo 'ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQCqz35tveThInSFi4ptaMkVKoxHrsxhUDb9xC6epDuu/3s2hvFPyuw8QOGq06tP5WmHeXgLgatzdHX5LrJ4zb425ExRlGOV85BP5tpgi1d+7bJgD94og4Fq475RjpPc5T5OKC+jYhDf/JMvID+PpDWRpPkaKUYdvmwacH95j7i1XuldUu5nKatIK3b14eWyPhmVdtAmw2C+gncTNSdZG5WM5mMfOEmbDMYcduGlUlKOB5IXp9D+E1Mg8J4gWUA6UEpqoSBjJMvSH5Vu3FlcAy0A2f0a9ckrlNsQ6EtW+8FOEFwamEoiLR8QHbV0Djya7WP7DDww4z2HjLc6mg3MTkxL serge@iMac-de-Serge.local' >> ~/.ssh/authorized_keys

# --- Partionnage et formattage du disque SSD
# Ne brancher que ce disque pour le moment
# fdisk créer partition 1 = 16gb, partition 2 = reste
sudo mkfs -t ext4  -L rootfs /dev/sda1
sudo mkfs -t btrfs -L data   /dev/sda2

PARTUUID1=$(lsblk -o PARTUUID /dev/sda1 | tail -n1 | awk '{print $1}')
PARTUUID2=$(lsblk -o PARTUUID /dev/sda2 | tail -n1 | awk '{print $1}')

# --- Identification de la partition boot sur SSD
# --- Ajuster /boot/cmdline.txt (quirks)
sudo cp /boot/cmdline.txt /boot/cmdline.txt.sd
echo "usb-storage.quirks=152d:0578:u console=serial0,115200 console=tty1 root=PARTUUID=$PARTUUID1 rootfstype=ext4 elevator=deadline fsck.repair=yes rootwait program_usb_timeout=1" | sudo tee -a /boot/cmdline.txt
sudo cp /boot/cmdline.txt /boot/cmdline.txt.usb

# --- copier / sur 1ere partition disque ssd
sudo mount /dev/sda1 /mnt
sudo rsync -ax / /mnt
sudo mkdir -p /mnt/data

# retirer ligne de mount de / avec SED
sudo sed -i -e "/ \/ /d" -e "/\/data/d" /mnt/etc/fstab
echo "PARTUUID=$PARTUUID1  /        ext4    defaults,noatime  0 1" | sudo tee -a /mnt/etc/fstab
echo "PARTUUID=$PARTUUID2  /data    btrfs  rw,relatime,space_cache,subvolid=5,subvol=/ 0 0" | sudo tee -a /mnt/etc/fstab
# on attends le prochain redémarrage pour monter /data

# --- Installation de raspi-backup
# ref: https://bit.ly/2PNUgem
curl -sSLO https://www.linux-tips-and-tricks.de/raspiBackupInstallUI.sh && sudo bash ./raspiBackupInstallUI.sh
# configurer pour utiliser /data/backups comme path de destinations (il créera le sous-répertoire bidule3)

# --- Installation de NextCloudPi
cd
curl -sSL https://raw.githubusercontent.com/nextcloud/nextcloudpi/master/install.sh > nextcloudpi-install.sh
sudo bash ./nextcloudpi-install.sh


# ensuite:
#First: Visit https://192.168.0.XXX/  https://nextcloudpi.local/ (also https://nextcloudpi.lan/ or https://nextcloudpi/ on windows and mac)
#to activate your instance of NC, and save the auto generated passwords. You may review or reset them
#anytime by using nc-admin and nc-passwd.
#Second: Type 'sudo ncp-config' to further configure NCP, or access ncp-web on https://192.168.0.XXX:4443/
#Note: You will have to add an exception, to bypass your browser warning when you
#first load the activation and :4443 pages. You can run letsencrypt to get rid of
#the warning if you have a (sub)domain available.

# --- installation de Postfix
sudo apt-get install postfix
# On configure notre relais smtp = celui de Videotron
sudo sed -i 's/relayhost = .*/relayhost = smtp.videotron.ca/g' /etc/postfix/main.cf
sudo service postfix restart
cd
wget https://raw.githubusercontent.com/DesertRider/RPI/master/mail.exp
chmod +x mail.exp
sudo cp mail.exp /usr/local/bin/
sudo apt-get install -y expect telnet
# pour tester: mail.exp localhost adresse-from@videotron.ca adresse-to@domaine

# --- installation du service fstrim (pour TRIM du ssd)
# ref: https://wiki.debian.org/SSDOptimization
sudo systemctl enable fstrim.timer
sudo systemctl start fstrim.timer

# --- installation de clamav
sudo apt-get install -y clamav clamav-daemon

# --- Setup du serveur Time Machine 
# ref: https://gregology.net/2018/09/raspberry-pi-time-machine/

sudo mkdir /media/BACKUP/timemachine
sudo chown pi:pi /media/BACKUP/timemachine
sudo apt-get install netatalk -y
sudo vim /etc/nsswitch.conf
# ajouter "dns mdns4 mdns" à la ligne débutant par "hosts:"

cat >/tmp/afp.conf <<FIN
[Global]
  mimic model = TimeCapsule6,106

[Time Machine]
  path = /media/BACKUP/timemachine
  time machine = yes
FIN
sudo mv /tmp/afp.conf /etc/netatalk/afp.conf
# (la ligne mimic model ne semble pas correcte et doit être commentée)

sudo mkdir -p /var/lock/netatalk
sudo service avahi-daemon start
sudo service netatalk start
# on ouvre le port 458 du firewall
sudo ufw allow afpovertcp

# --- setup de CUPS et cups-pdf pour imprimantes et PDF printer pour DropBox
# 1ere partie: CUPS
# Ref: https://pimylifeup.com/raspberry-pi-airprint/
#   et https://linuxwin.com/cups-airprint-on-raspberry-pi/
sudo apt-get update
sudo apt-get install -y cups cups-pdf

sudo mv /etc/cups-pdf.conf /etc/cups-pdf.ori
# Pour Dropbox
sudo cp /etc/cups/cups-pdf.conf.ori /etc/cups/cups-pdf-dropbox.conf
sudo sed -i -e 's,^\(Out \),#\1,' -e '/^#Out /a Out \/var\/spool\/cups-pdf\/dropbox' cups-pdf-dropbox.conf
sudo sed -i -e 's,^\(AnonDirName \),#\1,' -e '/^#AnonDirName /a AnonDirName \/var\/spool\/cups-pdf\/dropbox' cups-pdf-dropbox.conf
sudo mkdir -p /var/spool/cups-pdf/dropbox
sudo chown :lpadmin /var/spool/cups-pdf/dropbox
chmod g+rwx /var/spool/cups-pdf/dropbox
# Pour Nextcloud
sudo cp /etc/cups/cups-pdf.conf.ori /etc/cups/cups-pdf-nextcloud.conf
sudo sed -i -e 's,^\(Out \),#\1,' -e '/^#Out /a Out \/var\/spool\/cups-pdf\/nextcloud' cups-pdf-nextcloud.conf
sudo sed -i -e 's,^\(AnonDirName \),#\1,' -e '/^#AnonDirName /a AnonDirName \/var\/spool\/cups-pdf\/nextcloud' cups-pdf-nextcloud.conf
sudo mkdir -p /var/spool/cups-pdf/nextcloud
sudo chown :lpadmin /var/spool/cups-pdf/nextcloud
chmod g+rwx /var/spool/cups-pdf/nextcloud
sudo systemctl restart cups

# accéder à https://bidule3.local:63/admin et ajouter les imprimantes virtuelles PDF désirées
# Administration - Ajouter une imprimante
#    - imprimante locale CUPS-PDF
#    - donner un nom qui sera utilisé par le script pour rediriger le fichier PDF plus tard
#    - description: ceci sera visible pour les utilisateurs
#    - cocher Partager cette imprimante
#    - comme marque, choisir Generic - Generic CUPS-PDF Printer W/ options)

# 2e partie: Dropbox uploader
# Ref: https://github.com/andreafabrizi/Dropbox-Uploader
cd
curl "https://raw.githubusercontent.com/andreafabrizi/Dropbox-Uploader/master/dropbox_uploader.sh" -o dropbox_uploader.sh
chmod +x dropbox_uploader.sh
sudo mv dropbox_uploader.sh /usr/local/bin/

# Suivre les instructions à l'écran pour la création de l'application Dropbox et la configuration des credentials
# (ici le nom de l'application sera PDF-Bidule3
dropbox_uploader.sh
# Dropbox va créer un répertoire /Applications/PDF-Bidule3 et les fichiers y seront déposés

# 3e partie: Utilisation de incrontab pour déplacer les fichiers générés par cups-pdf vers la bonne destination
# Ref: https://www.howtoforge.com/tutorial/trigger-commands-on-file-or-directory-changes-with-incron/
sudo apt-get install -y incron
echo "root" | sudo tee -a /etc/incron.allow



# --- 

# --- export NFS pour partage de musique
sudo mkdir /data/music
sudo chown pi:pi /data/music
echo "/data/music        192.168.0.252(ro,all_squash,insecure,async,no_subtree_check,anonuid=1000,anongid=1000)" | sudo tee /etc/exports
sudo exportfs -ra
# sur le Mac, faire un rsync entre le répertoire iTunes et bidule3.local:/data/music

# --- Installation de RPi-Monitor
# ref: https://xavierberger.github.io/RPi-Monitor-docs/11_installation.html
sudo apt-get install dirmngr
sudo apt-key adv --recv-keys --keyserver keyserver.ubuntu.com 2C0D3C0F
sudo wget http://goo.gl/vewCLL -O /etc/apt/sources.list.d/rpimonitor.list
sudo apt-get update
sudo apt-get install rpimonitor
# rpimonitor va écouter sur le port 8888
sudo ufw allow 8888/tcp
# tel qu'affiché on va lancer un update
sudo /etc/init.d/rpimonitor update
# et permettre l'autoexécution des updates
sudo /etc/init.d/rpimonitor install_auto_package_status_update

# --- installation de minidlna server - DÉSACTIVÉ, n'est pas employé par volumio
# Ref: https://debian-facile.org/doc:reseau:minidlna
# et https://pimylifeup.com/raspberrypi-minidlna/
sudo apt intall -y minidlna
sudo sed -i 's;media_dir=.*;media_dir=A,/data/music;' /etc/minidlna.conf
sudo sed -i 's;#friendly_name=.*;friendly_name=Bidule3-dlna;' /etc/minidlna.conf
sudo sed -i 's;#inotify=yes;inotify=yes;' /etc/minidlna.conf
sudo sed -i 's;#inotify_interval=.*;inotify_interval=3600;' /etc/minidlna.conf
sudo sed -i 's;#db_dir=;db_dir=;' /etc/minidlna.conf
sudo mkdir /data/music
sudo chown pi:pi /data/music
sudo systemctl enable minidlna
sudo systemctl start minidlna
# pour démarrer l'indexation
sudo systemctl force-reload minidlna
echo "fs.inotify.max_user_watches = 100000" | sudo tee -a /etc/sysctl.conf

# --- Installation de squid
# Réf.: https://linuxize.com/post/how-to-install-and-configure-squid-proxy-on-ubuntu-18-04/
# et https://medium.com/@bindassbasanta/squid-proxy-cache-using-raspberry-pi-diy-45720395ae21
sudo apt-get update
sudo apt-get install -y squid
sudo ufw allow squid
sudo cp /etc/squid/squid.conf{,.orginal}
sudo sed -i 's/^#http_access allow localnet/http_access allow localnet/g' /etc/squid/squid.conf
sudo sed -i 's/^# dns_v4_first off/dns_v4_first on/g' /etc/squid/squid.conf
sudo sed -i -e '/^#logformat squid /alogformat squid-serge      %{%Y/%m/%d:%H:%M:%S %z}tl.%03tu %6tr %>a %Ss/%03>Hs %<st %rm %ru %[un %Sh/%<a %mt' /etc/squid/squid.conf
sudo sed -i 's/^# access_log.*/access_log stdio:\/var\/log\/squid\/access.log squid-serge/g' /etc/squid/squid.conf

# --- Installation d'Ansible
# Réf.: https://www.theurbanpenguin.com/installing-ansible-on-the-raspberry-pi/
sudo apt install -y ansible sshpass
# (à compléter...)
# Utiliser ansible à l'avenir pour le setup des diverses composantes du pi

# --- à documenter:
# - update de lynis, ref: https://docs.nextcloudpi.com/en/how-to-update-lynis/
# - cron running lynis weekly and putting report somewhere...
# - email notifications not working...


